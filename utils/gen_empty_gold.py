'''Generate Empty Gold

This script creates an initial gold `.py` file for parsing a drawing procedure.

When running this script, it will prompt the user for a username and a procedure index.
The username will be written inside the gold file.
If you enter the username `Bond` and the procedure number `7`, the gold file
will be named: `Bond_gold_007.py`.

The gold file will contain the drawing procedure instructions,
and everything else needed for running the file (as a script).
The user can fill in the necessary code under each step of the instructions.

When running the gold file, the gold image will be plotted,
together with the image generated by the code written by the user.
The difference between the two images will also be plotted.
'''

from constants.constants import ROOT_DIR
import os.path
from utils.reading_tasks import read_task


def main():
    """Generate a new empty gold file for a given task."""
    # read the task from jsonl files
    user_name = input("Please enter a username: ")
    task_index = int(input("Please provide the task index: "))
    task_dict = read_task(task_index)
    if task_dict['group'] != 'train':
        print(f"\nWarning! Task {task_index} is in {task_dict['group']} set")
        if input('Would you like continue? enter y/n ') == 'n':
            return

    # use template to create file
    template_path = ROOT_DIR / 'gold' / 'template.txt'
    with open(template_path, 'r') as file:
        template = file.read().split('\n')

    # create new file and write to it
    file_name = f'{user_name}_gold_{task_index:0>3}.py'
    gold_dir = ROOT_DIR / 'gold'
    if os.path.exists(os.path.join(gold_dir, file_name)):
        print(f'\nfile {file_name} already exists! not creating a new file\n')
    else:
        print(f'creating file {file_name}')
        with open(os.path.join(gold_dir, file_name), 'w+') as file_id:
            file_id.write(f'# Created by by {user_name}\n\n')
            file_id.write('\n'.join(template[:3]))
            file_id.write(f'\ntask_index = {task_index}\n')
            file_id.write('\n'.join(template[4:9]))
            file_id.write(f"\n{task_dict['description']}\n\n")
            file_id.write(task_dict['instructions'])
            file_id.write('\n'.join(template[12:]))


if __name__ == "__main__":
    main()
